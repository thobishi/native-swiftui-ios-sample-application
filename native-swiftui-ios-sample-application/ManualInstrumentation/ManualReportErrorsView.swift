//
//  ManualReportErrorsView.swift
//  native-swiftui-ios-sample-application
//
//  Created by Sabry, Ahmad on 24.01.23.
//

import SwiftUI
import Dynatrace

struct ManualReportErrorsView: View {
    @State private var txtError = ""
    @State private var txtInformation = "Error bound to a specific user action https://www.dynatrace.com/support/help/shortlink/ios-oneagent-sdk#report-error\nWith reportError, you can report a specific event as an error event.\nThere are two options for reporting an error event:\nReport it as part of an action (either a custom action or an autogenerated user action)\nReport it as a standalone error, which is generated as a global event that is not tied to a specific action\nReported errors (both standalone and \"attached\" to a user action) are displayed on the user session details page and multidimensional User action analysis page. Reported errors that are part of a user action are also displayed in the user action waterfall analysis.\n\nYou can report an error with an error code, an exception, or an NSError. "
    var body: some View {
        VStack{
            Form{
                Section(){
                    HStack{
                        TextField("User action error", text: $txtError)
                    }
                  
                }
                Section(){
                    Button("Report user action error", action: {
                        let action = DTXAction.enter(withName: "Touch on Report user action error")
                        action?.reportError(withName: txtError, errorValue: -1)
                     // Another way of reporting error
                     action?.reportError(withName: txtError, error: NSError(domain: "Action issue", code: 007, userInfo: nil))
                        action?.leave()
                    })
                }
               
            }
            InformationView( text: txtInformation)

        }.uiKitOnAppear{
            let action = DTXAction.enter(withName: "Loading of \(Self.self)")
            action?.leave()
        }
    }
}

struct ManualReportErrorsView_Previews: PreviewProvider {
    static var previews: some View {
        ManualReportErrorsView()
    }
}
